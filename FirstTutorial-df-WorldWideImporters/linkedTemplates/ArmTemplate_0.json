{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "FirstTutorial-df-WorldWideImporters"
		},
		"AzureDataLakeStorageLS_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorageLS'"
		},
		"AzureDatabaseLS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureDatabaseLS'"
		},
		"LS_ADLS_FirstTutorial_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_ADLS_FirstTutorial'"
		},
		"LS_SQLDB_FirstTutorial_sqldb_WideWorldImporters_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SQLDB_FirstTutorial_sqldb_WideWorldImporters'"
		},
		"LS_SQLDB_ONPREM_WorldWideImportersDW_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SQLDB_ONPREM_WorldWideImportersDW'"
		},
		"OnPremFileSystemLS_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'OnPremFileSystemLS'"
		},
		"OnPremiseSQLServerLS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'OnPremiseSQLServerLS'"
		},
		"AzureDataLakeStorageLS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://firsttutorialdatastorev2.dfs.core.windows.net"
		},
		"LS_ADLS_FirstTutorial_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://firsttutorialdatastorev2.dfs.core.windows.net"
		},
		"OnPremFileSystemLS_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "E:\\FileSystemOnPrem"
		},
		"OnPremFileSystemLS_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "dev\\chris"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorageLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorageLS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorageLS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabaseLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "FirstLinkedService Description",
				"annotations": [
					"FirstLinkedService Annotations Properties"
				],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureDatabaseLS_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ADLS_FirstTutorial')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_ADLS_FirstTutorial_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_ADLS_FirstTutorial_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQLDB_FirstTutorial_sqldb_WideWorldImporters')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_SQLDB_FirstTutorial_sqldb_WideWorldImporters_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPremiseIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureLegacySensorReadingDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDatabaseLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ReadingId",
						"type": "varchar"
					},
					{
						"name": "ReadingDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LocationId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "PollutionLevel",
						"type": "tinyint",
						"precision": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "LegacySensorReadings"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabaseLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_sensor_sink_raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_FirstTutorial",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "sensor-sink-raw"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"uid": {
							"type": "string"
						},
						"dat": {
							"type": "string"
						},
						"loc": {
							"type": "integer"
						},
						"lev": {
							"type": "integer"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_FirstTutorial')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_FirstTutorial",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "staging"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_FirstTutorial')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADSL_reusable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_FirstTutorial",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder": {
						"type": "string"
					},
					"file": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folder",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_FirstTutorial')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQLDB_FirstTutorial_sqldb_WideWorldImporters')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQLDB_FirstTutorial_sqldb_WideWorldImporters",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "Dimension",
					"table": "City"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQLDB_FirstTutorial_sqldb_WideWorldImporters')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IncrementalWatermarksDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDatabaseLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TableName",
						"type": "varchar"
					},
					{
						"name": "LastInsertedId",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "IncrementalWatermarks"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabaseLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQLDB_ONPREM_WorldWideImportersDW')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('LS_SQLDB_ONPREM_WorldWideImportersDW_connectionString')]"
				},
				"connectVia": {
					"referenceName": "OnPremiseIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/OnPremiseIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPremFileSystemLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('OnPremFileSystemLS_properties_typeProperties_host')]",
					"userId": "[parameters('OnPremFileSystemLS_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('OnPremFileSystemLS_password')]"
					}
				},
				"connectVia": {
					"referenceName": "OnPremiseIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/OnPremiseIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPremiseSQLServerLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('OnPremiseSQLServerLS_connectionString')]"
				},
				"connectVia": {
					"referenceName": "OnPremiseIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/OnPremiseIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRAN_TransformSensorData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileList",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "CheckFilesExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_sensor_sink_raw",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "FilterFilesOnly",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "MoveFiles",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFilesOnly",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFilesOnly').output.value",
								"type": "Expression"
							},
							"batchCount": 30,
							"activities": [
								{
									"name": "CopyFile",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADSL_reusable",
											"type": "DatasetReference",
											"parameters": {
												"folder": {
													"value": "@pipeline().parameters.BlobSource",
													"type": "Expression"
												},
												"file": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADSL_reusable",
											"type": "DatasetReference",
											"parameters": {
												"folder": {
													"value": "@pipeline().parameters.BlobDestination",
													"type": "Expression"
												},
												"file": "@item().name"
											}
										}
									]
								},
								{
									"name": "DeleteFile",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyFile",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADSL_reusable",
											"type": "DatasetReference",
											"parameters": {
												"folder": {
													"value": "@pipeline().parameters.BlobSource",
													"type": "Expression"
												},
												"file": "@item().name"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_FirstTutorial",
												"type": "LinkedServiceReference"
											}
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true
										}
									}
								}
							]
						}
					},
					{
						"name": "CheckFilesExists",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_sensor_sink_raw",
								"type": "DatasetReference",
								"parameters": {}
							},
							"timeout": "7.00:00:00",
							"sleep": 10,
							"childItems": true
						}
					}
				],
				"parameters": {
					"BlobSource": {
						"type": "string",
						"defaultValue": "sensor-sink-raw"
					},
					"BlobDestination": {
						"type": "string",
						"defaultValue": "sensor-sink-stage"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_sensor_sink_raw')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADSL_reusable')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_FirstTutorial')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQLDB_ONPREM_WorldWideImporterDW')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQLDB_ONPREM_WorldWideImportersDW",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQLDB_ONPREM_WorldWideImportersDW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFilesjsonDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OnPremFileSystemLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"folderPath": "SensorData"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"uid": {
							"type": "string"
						},
						"dat": {
							"type": "string"
						},
						"loc": {
							"type": "integer"
						},
						"lev": {
							"type": "integer"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OnPremFileSystemLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPremFileSystemStagingDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OnPremFileSystemLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"folderPath": "Staging"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OnPremFileSystemLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPremiseLegacySensorReadingDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OnPremiseSQLServerLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ReadingId",
						"type": "varchar"
					},
					{
						"name": "ReadingDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LocationId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "PollutionLevel",
						"type": "tinyint",
						"precision": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "LegacySensorReadings"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OnPremiseSQLServerLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLOnPremIncremental')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LegacySensorReadingLastInserted",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select *\nfrom IncrementalWatermarks\nwhere TableName = 'LegacySensorReadings'",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "IncrementalWatermarksDS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "MaxLegacySensorReadingId",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "select max(id) as MaxId from LegacySensorReadings",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "OnPremiseLegacySensorReadingDS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "LegacySensorReadings",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "MaxLegacySensorReadingId",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LegacySensorReadingLastInserted",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "select *\nfrom LegacySensorReadings\nwhere\nid > @{activity('LegacySensorReadingLastInserted').output.firstRow.LastInsertedId}\nand id <= @{activity('MaxLegacySensorReadingId').output.firstRow.MaxId}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ReadingId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReadingId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReadingDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ReadingDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "LocationId",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "LocationId",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "PollutionLevel",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "PollutionLevel",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "OnPremiseLegacySensorReadingDS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureLegacySensorReadingDS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "UpdateLegacySensorReadingLastInserted",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "LegacySensorReadings",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spUpdateIncrementalWatermark]",
							"storedProcedureParameters": {
								"id": {
									"value": {
										"value": "@{activity('MaxLegacySensorReadingId').output.firstRow.MaxId}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"tableName": {
									"value": "LegacySensorReadings",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabaseLS",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/IncrementalWatermarksDS')]",
				"[concat(variables('factoryId'), '/datasets/OnPremiseLegacySensorReadingDS')]",
				"[concat(variables('factoryId'), '/datasets/AzureLegacySensorReadingDS')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabaseLS')]"
			]
		}
	]
}